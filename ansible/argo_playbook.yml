# ansible/argo_playbook.yml
- hosts: local
  become: yes
  vars_files:
    - config.yml
  environment:
    KUBECONFIG: "{{ kubeconfig_path }}"
  tasks:
    - name: Ensure kubectl is installed
      apt:
        name: kubectl
        state: present

    - name: Create the argocd namespace
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: v1
          kind: Namespace
          metadata:
            name: argocd

    - name: Apply Argo CD install manifests
      command: kubectl apply -n argocd -f https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml

    - name: Patch Argo CD server deployment to set KUBERNETES_MASTER env variable
      command: kubectl set env deployment/argocd-server -n argocd KUBERNETES_MASTER=https://kubernetes.default.svc
      ignore_errors: yes

    - name: Patch Argo CD repo server deployment to set KUBERNETES_MASTER env variable
      command: kubectl set env deployment/argocd-repo-server -n argocd KUBERNETES_MASTER=https://kubernetes.default.svc
      ignore_errors: yes

    - name: Patch Argo CD application controller to set KUBERNETES_MASTER env variable
      command: kubectl set env deployment/argocd-application-controller -n argocd KUBERNETES_MASTER=https://kubernetes.default.svc
      ignore_errors: yes

    - name: Patch Argo CD Dex server deployment to set KUBERNETES_MASTER env variable
      command: kubectl set env deployment/argocd-dex-server -n argocd KUBERNETES_MASTER=https://kubernetes.default.svc
      ignore_errors: yes

    - name: Wait for Argo CD pods to be ready
      kubernetes.core.k8s_info:
        kind: Pod
        namespace: argocd
        label_selectors:
          - app=argocd-server
      register: result
      until: result.resources | selectattr('status.phase', 'equalto', 'Running') | list | length > 0
      retries: 10
      delay: 5

    - name: Forward the Argo CD server port
      ansible.builtin.shell:
        cmd: "kubectl port-forward svc/argocd-server -n argocd 8080:443 > /dev/null 2>&1 &"

    - name: Get initial Argo CD admin password
      kubernetes.core.k8s_info:
        kind: Secret
        namespace: argocd
        name: argocd-initial-admin-secret
      register: argocd_secret

    - name: Decode initial admin password
      set_fact:
        argocd_password: "{{ argocd_secret.resources[0].data.password | b64decode }}"

    - name: Display initial Argo CD admin password
      debug:
        msg: "Initial Argo CD admin password: {{ argocd_password }}"
