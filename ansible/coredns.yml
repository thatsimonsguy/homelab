# ansible/install_coredns.yml
- hosts: local
  become: yes
  vars_files:
    - config.yml
  environment:
    KUBECONFIG: "{{ kubeconfig_path }}"
  tasks:
    - name: Ensure Helm is installed
      command: helm version
      register: helm_installed
      failed_when: helm_installed.rc != 0
      ignore_errors: yes

    - name: Add CoreDNS Helm repository
      command: helm repo add coredns https://coredns.github.io/helm
      register: helm_repo_added
      failed_when: helm_repo_added.rc != 0
      ignore_errors: yes

    - name: Update Helm repositories
      command: helm repo update
      when: helm_repo_added.rc == 0

    - name: Check if CoreDNS ConfigMap exists
      command: kubectl get configmap coredns -n kube-system
      register: coredns_configmap
      ignore_errors: yes

    - name: Patch existing CoreDNS ConfigMap if it exists
      command: >
        kubectl patch configmap coredns -n kube-system
        --type=json
        -p='[{"op": "add", "path": "/metadata/labels/app.kubernetes.io~1managed-by", "value": "Helm"},
             {"op": "add", "path": "/metadata/annotations/meta.helm.sh~1release-name", "value": "coredns"},
             {"op": "add", "path": "/metadata/annotations/meta.helm.sh~1release-namespace", "value": "kube-system"}]'
      when: coredns_configmap.rc == 0

    - name: Patch existing CoreDNS Deployment if it exists
      command: >
        kubectl patch deployment coredns -n kube-system
        --type=json
        -p='[{"op": "add", "path": "/metadata/labels/app.kubernetes.io~1managed-by", "value": "Helm"},
             {"op": "add", "path": "/metadata/annotations/meta.helm.sh~1release-name", "value": "coredns"},
             {"op": "add", "path": "/metadata/annotations/meta.helm.sh~1release-namespace", "value": "kube-system"}]'
      when: coredns_deployment.rc == 0

    - name: Install or upgrade CoreDNS
      command: helm upgrade --install coredns coredns/coredns --namespace kube-system --create-namespace

    - name: Verify CoreDNS installation
      command: kubectl get pods -n kube-system -l app.kubernetes.io/name=coredns
      register: coredns_installed

    - name: Display CoreDNS installation status
      debug:
        msg: "{{ coredns_installed.stdout }}"