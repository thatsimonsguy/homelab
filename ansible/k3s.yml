# ansible/k3s.yml
- hosts: local
  become: yes
  vars_files:
    - config.yml
  tasks:
    - name: Ensure Python 3 and pip are installed
      apt:
        name:
          - python3
          - python3-pip
        state: present

    - name: Install kubernetes Python package
      apt:
        name: python3-kubernetes
        state: present

    - name: Install k3s
      shell: |
        curl -sfL {{ k3s_install_url }} | INSTALL_K3S_EXEC="server --disable servicelb" sh -
      args:
        executable: /bin/bash

    - name: Ensure Ansible is installed # goofy, since we're running this in ansible, but...
      apt:
        name: ansible
        state: present
        update_cache: yes

    - name: Install the community.kubernetes collection
      ansible.builtin.command:
        cmd: ansible-galaxy collection install community.kubernetes
      args:
        creates: /root/.ansible/collections/ansible_collections/community/kubernetes

    - name: Ensure k3s is running
      systemd:
        name: k3s
        state: started
        enabled: yes

    - name: Create .kube directory if it does not exist
      file:
        path: "{{ kubeconfig_target_dir }}"
        state: directory
        owner: "{{ user }}"
        group: "{{ user }}"
        mode: '0755'

    - name: Remove existing kube config if it exists
      file:
        path: "{{ kubeconfig_target_path }}"
        state: absent
      ignore_errors: yes

    - name: Hard link k3s kube config to expected location for argo
      file:
        src: "{{ kubeconfig_path }}"
        dest: "{{ kubeconfig_target_path }}"
        owner: "{{ user }}"
        group: "{{ user }}"
        state: link
        force: yes

    - name: Ensure the directory for systemd drop-ins exists
      file:
        path: /etc/systemd/system/k3s.service.d
        state: directory
        mode: '0755'

    - name: Create systemd drop-in for K3s
      copy:
        dest: /etc/systemd/system/k3s.service.d/10-kube-proxy.conf
        content: |
          [Service]
          ExecStart=
          ExecStart=/usr/local/bin/k3s server --kube-proxy-arg=proxy-mode=ipvs --kube-proxy-arg=ipvs-strict-arp=true

    - name: Map insecure local registry
      copy:
        dest: /etc/rancher/k3s/registries.yaml
        content: |
          mirrors:
            "192.168.2.17:5000":
              endpoint:
                - "http://192.168.2.17:5000"

          configs:
            "192.168.2.17:5000":
              tls:
                insecure_skip_verify: true
        mode: '0644'

    - name: Reload systemd to apply the new configuration
      command: systemctl daemon-reload

    - name: Restart K3s to apply new kube-proxy and registry settings
      service:
        name: k3s
        state: restarted

    - name: Apply default retain storage class
      kubernetes.core.k8s:
        state: present
        src: retain_default_storageclass.yaml
        kubeconfig: "{{ kubeconfig_target_path }}"

    - name: Apply NAS config storage class
      kubernetes.core.k8s:
        state: present
        src: nas_config_storageclass.yaml
        kubeconfig: "{{ kubeconfig_target_path }}"